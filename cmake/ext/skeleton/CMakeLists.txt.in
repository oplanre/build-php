# CMakeLists.txt file for the %EXTNAME% extension.

# Comments in this file start with the string '#'.
# Remove where necessary.

# Include CMake module to use cmake_dependent_option().
include(CMakeDependentOption)

# Include CMake module to use add_feature_info() and set_package_properties().
include(FeatureSummary)

# Boolean option that enables (ON) or disables (OFF) the extension.
option(EXT_%EXTNAMECAPS% "Enable the %EXTNAME% extension" OFF)

# Extension features are visible in the configuration summary output.
add_feature_info(
  "ext/%EXTNAME%"
  EXT_%EXTNAMECAPS%
  "Describe the extension features."
)

# Dependent boolean option that builds extension as a shared library. CMake's
# BUILD_SHARED_LIBS variable hides this option and builds extension as shared.
cmake_dependent_option(
  EXT_%EXTNAMECAPS%_SHARED
  "Build the %EXTNAME% extension as a shared library"
  OFF
  "EXT_%EXTNAMECAPS%;NOT BUILD_SHARED_LIBS"
  OFF
)

# If extension is disabled CMake configuration stops here.
if(NOT EXT_%EXTNAMECAPS%)
  return()
endif()

# Add a target to be built as a SHARED or STATIC library.
if(EXT_%EXTNAMECAPS%_SHARED)
  add_library(php_%EXTNAME% SHARED)
else()
  add_library(php_%EXTNAME%)
endif()

# Add library target sources.
target_sources(
  php_%EXTNAME%
  PRIVATE
    %EXTNAME%.c
  # If extension provides header(s) that will be consumed by other sources and
  # should be installed, add header(s) to a file set.
  PUBLIC
    FILE_SET HEADERS
      BASE_DIRS "${PHP_SOURCE_DIR}"
      FILES
        php_%EXTNAME%.h
)

# If extension is Zend extension, enable the PHP_ZEND_EXTENSION target property.
#set_target_properties(php_%EXTNAME% PROPERTIES PHP_ZEND_EXTENSION TRUE)

# Installation step copies file(s) to their appropriate system destinations.
install(
  TARGETS php_%EXTNAME%
  ARCHIVE EXCLUDE_FROM_ALL
  FILE_SET HEADERS
)
