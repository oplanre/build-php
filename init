#!/bin/sh
#
# CMake initialization helper script.

update=0
cmake=0
options=""
generator=UnixMakefiles
debug=0

# Go to project root.
cd $(CDPATH= cd -- "$(dirname -- "$0")" && pwd -P)

while test $# -gt 0; do
  if test "$1" = "-h" || test "$1" = "--help"; then
    cat << HELP
PHP CMake initialization helper

SYNOPSIS:
  init [<options>]

OPTIONS:
  -u, --update           Clone and/or pull the php-src Git repository.
  -c, --cmake            Run cmake configuration and build commands.
  -o, --options VALUE    CMake options which are appended to the CMake command.
                           cmake -DOPTION .
  -g, --generator VALUE  CMake generator (UnixMakefiles|Ninja)
  -d, --debug            Debug mode.
  -h, --help             Display this help.
HELP
    exit 0
  fi

  if test "$1" = "-u" || test "$1" = "--update"; then
    update=1
  fi

  if test "$1" = "-c" || test "$1" = "--cmake"; then
    cmake=1
  fi

  if test "$1" = "-o" || test "$1" = "--options"; then
    options=$2
    shift
  fi

  if test "$1" = "-g" || test "$1" = "--generator"; then
    generator=$2
    shift
  fi

  if test "$1" = "-d" || test "$1" = "--debug"; then
    debug=1
  fi

  shift
done

# Clone a fresh latest php-src repository.
if test ! -d "php-src"; then
  git clone --depth 1 https://github.com/php/php-src ./php-src
fi

if test "$update" = "1"; then
  cd php-src
  git checkout .
  git clean -dffx .
  git pull --rebase
  cd ..
fi

cp -r cmake/* php-src/

# Apply patches to php-src from the patches directory.
patches=$(find ./patches -maxdepth 1 -type f -name "*.patch")
for file in $patches; do
  case $file in
    *.patch)
      patch -p1 -d php-src < $file
      ;;
  esac
done

if test "${debug}" = "1"; then
  cmake_debug_options="--debug-trycompile"
fi

# Run cmake configuration and build.
if test "$cmake" = "1"; then
  cd php-src
  if test "$generator" = "UnixMakefiles"; then
    cmake .  ${cmake_debug_options} ${options}
    cmake --build . --verbose -- --jobs $(nproc)
  elif test "$generator" = "Ninja"; then
    cmake . ${cmake_debug_options} ${options} -G Ninja
    ninja -j $(nproc)
  fi
else
  echo "Now run:
    cmake .
    cmake --build .
  "
fi
